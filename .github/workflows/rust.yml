name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  CI-CD:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
    - uses: actions/checkout@v4
    - name: Install MinGW
      run: sudo apt-get install -y mingw-w64
    - name: Set up Rust toolchain
      run: |
        rustup update ${{ matrix.toolchain }}
        rustup default ${{ matrix.toolchain }}
        rustup target add x86_64-pc-windows-gnu
    - name: Build for Linux (Release)
      run: cargo build --release
    - name: Build for Windows (Release)
      run: cargo build --target x86_64-pc-windows-gnu --release
    - name: Run tests
      run: cargo test --verbose
    - name: Set short SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Package and Upload Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir release
        cp target/release/bw_http_forwarder release/bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}
        cp target/x86_64-pc-windows-gnu/release/bw_http_forwarder.exe release/bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}.exe
        cd release
        zip -r bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}-linux-x86_64.zip bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}
        zip -r bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}-windows-x86-64.zip bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}.exe
        cd ..
    - name: Release Binaries
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.vars.outputs.sha_short }}
        files: |
          release/bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}-linux-x86_64.zip
          release/bw_http_forwarder-v${{ steps.vars.outputs.sha_short }}-windows-x86-64.zip
        
